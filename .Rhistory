ggplot(data=mpg2, aes(x= class, y=hwy))+
stat_summary(fun.y=median,
geom="point")+
theme_Lect24()
#summary stats
#Replace mean in below code with min, max
#geom=point, geom-bar
ggplot(data=mpg2, aes(x= class, y=hwy))+
stat_summary(fun.y=mean,
geom="bar")+
theme_Lect24()
ggplot(data=mpg2, aes(x= class, y=hwy))+
stat_summary(fun.y=mean,
geom="point")+
stat_summary(fun.data = mean_se,
geom = "errorbar") +
theme_Lect24()
ggplot(data=mpg2, aes(x= class, y=hwy))+
stat_summary(fun.y=mean,
geom="bar")+
stat_summary(fun.data = mean_se,
geom = "errorbar") +
theme_Lect24()
ggplot(data=mpg2, aes(x= class, y=hwy))+
stat_summary(fun.y=mean,
geom="point")+
stat_summary(fun.data = mean_se,
geom = "errorbar") +
theme_Lect24()
ggplot(data=mpg2, aes(x= class, y=hwy))+
stat_summary(fun.y=mean,
geom="point")+
stat_summary(fun.data = mean_se,
geom = "errorbar") +
geom_violin()+
theme_Lect24()
ggplot(data=mpg2, aes(x= class, y=hwy))+
stat_summary(fun.y=mean,
geom="point")+
stat_summary(fun.data = mean_se,
geom = "errorbar",
width=.5) +
theme_Lect24()
ggplot(data=mpg2, aes(x= class, y=hwy))+
geom_violin()
ggplot(data=mpg2, aes(x= class, y=hwy))+
geom_violin()+
stat_summary(fun.y=mean,
geom="point")+
stat_summary(fun.data = mean_se,
geom = "errorbar", width=.5) +
theme_Lect24()
ggplot(data=mpg2, aes(x= class, y=hwy))+
geom_violin()+
stat_summary(fun.y=mean,
geom="point")+
stat_summary(fun.data = mean_se,
geom = "errorbar",
width=0) +
theme_Lect24()
ggplot(data=mpg2, aes(x= class, y=hwy))+
stat_summary(fun.y=mean,
geom="point")+
stat_summary(fun.data = mean_se,
geom = "errorbar",
width=.5) +
theme_Lect24()
ggplot(data=mpg2, aes(x= class, y=hwy))+
stat_summary(fun.y=mean,
geom="point")+
stat_summary(fun.data = mean_se,
geom = "errorbar",
width=.2) +
theme_Lect24()
ggplot(data=mpg2, aes(x= class, y=hwy))+
stat_summary(fun.y=mean,
geom="bar")+
stat_summary(fun.data = mean_se,
geom = "errorbar",
width=.2) +
theme_Lect24()
ggplot(data=mpg2, aes(x= class, y=hwy))+
stat_summary(fun.y=mean,
geom="bar")+
stat_summary(fun.data = mean_se,
geom = "errorbar",
width=.5) +
theme_Lect24()
ggplot(data=mpg2, aes(x= class, y=hwy))+
stat_summary(fun.y=mean,
geom="point")+
stat_summary(fun.data = mean_se,
geom = "errorbar",
width=.5) +
theme_Lect24()
colnames()
colnames(mpg2)
###Challenges
#challenge 1
ggplot(data=mpg2, aes(x=class, fill=factor(trans)))+
geom_bar()
###Challenges
#challenge 1
ggplot(data=mpg2, aes(x=class, fill=factor(trans)))+
facet_wrap(~year)+
geom_bar()
###Challenges
#challenge 1
ggplot(data=mpg2, aes(x=class, fill=factor(trans)))+
facet_wrap(~year)+
geom_bar()+
theme_Lect24()
###Challenges
#challenge 1
ggplot(data=mpg2, aes(x=trans, fill=year))+
geom_bar()+
theme_Lect24()
###Challenges
#challenge 1
ggplot(data=mpg2, aes(x=trans, fill=factor(year))+
###Challenges
#challenge 1
ggplot(data=mpg2, aes(x=trans, fill=factor(year))+
###Challenges
#challenge 1
ggplot(data=mpg2, aes(x=trans, fill=factor(year)))+
geom_bar()+
theme_Lect24()
)
ggplot(data=mpg2, aes(x=trans, fill=factor(year)))+
geom_bar()+
theme_Lect24()
ggplot(data=mpg2, aes(x=trans, fill=factor(year)))+
geom_bar()+
theme_Lect24()
colnames(mpg2)
#challenge 2
ggplot(data = mpg2, aes(x=trans, y=displ))+
geom_violin()+
stat_summary(fun.y=mean,
geom="point")
#challenge 2
ggplot(data = mpg2, aes(x=trans, y=displ))+
geom_violin()+
stat_summary(fun.y=mean,
geom="point")+
theme_Lect24()
#challenge 2
ggplot(data = mpg2, aes(x=trans, y=displ))+
geom_violin(color="pink")+
stat_summary(fun.y=mean,
geom="point")+
theme_Lect24()
#challenge 2
ggplot(data = mpg2, aes(x=trans, y=displ))+
geom_violin(color="pink")+
stat_summary(fun.y=mean,
geom="point",
color="blue")+
theme_Lect24()
#challenge 2
ggplot(data = mpg2, aes(x=trans, y=displ))+
geom_violin(fill="pink")+
stat_summary(fun.y=mean,
geom="point",
color="blue")+
theme_Lect24()
#challenge 2
ggplot(data = mpg2, aes(x=trans, y=cty))+
geom_violin(fill="pink")+
stat_summary(fun.y=mean,
geom="point",
color="blue")+
theme_Lect24()
#dissatisfied
#What characterizes dissatisfied teachers?
dissatisfied=subset(x=teacherdata, teacherdata$How.satisfied.are.you.with.your.current.teaching.position. < 4)
#About their current experience
summary (dissatisfied$To.what.extent.have.you.been.able.to.form.close.relationships.with.the.administrators.at.your.current.school.)
summary (dissatisfied$To.what.extent.have.you.been.able.to.form.close.relationships.with.the.parents.at.your.current.school.)
summary (dissatisfied$To.what.extent.have.you.been.able.to.form.close.relationships.with.the.students.at.your.current.school.)
summary (dissatisfied$To.what.extent.have.you.been.able.to.form.close.relationships.with.the.teachers.at.your.current.school.)
summary (dissatisfied$To.what.extent.is.policy.at.your.current.school.shaped.by.teacher.input.)
admindis<-dissatisfied$To.what.extent.have.you.been.able.to.form.close.relationships.with.the.administrators.at.your.current.school.
adminsat<-satisfied$To.what.extent.have.you.been.able.to.form.close.relationships.with.the.administrators.at.your.current.school.
wilcox.test(admindis ~ adminsat, data=teacherdata)
final<-cbind(admindis, adminsat)
View(final)
admindis<-dissatisfied$To.what.extent.have.you.been.able.to.form.close.relationships.with.the.administrators.at.your.current.school.
adminsat<-satisfied$To.what.extent.have.you.been.able.to.form.close.relationships.with.the.administrators.at.your.current.school.
final<-cbind(admindis, adminsat)
View(final)
admindis<-dissatisfied$To.what.extent.have.you.been.able.to.form.close.relationships.with.the.administrators.at.your.current.school.
adminsat<-satisfied$To.what.extent.have.you.been.able.to.form.close.relationships.with.the.administrators.at.your.current.school.
n <- max(length(x), length(y))
length(x) <- n
length(y) <- n
final<-cbind(admindis, adminsat)
admindis<-dissatisfied$To.what.extent.have.you.been.able.to.form.close.relationships.with.the.administrators.at.your.current.school.
adminsat<-satisfied$To.what.extent.have.you.been.able.to.form.close.relationships.with.the.administrators.at.your.current.school.
n <- max(length(admindis), length(adminsat))
length(admindis) <- n
length(adminsat) <- n
final<-cbind(admindis, adminsat)
View(final)
wilcox.test(admindis ~ adminsat, data=final)
wilcox.test(admindis ~ adminsat, data=final, na.rm=TRUE, paired=FALSE)
?wilcox/add_sub
?wilcox.test
install.packages("stats")
install.packages("stats")
library(stats)
wilcox.test(admindis ~ adminsat, data=final, na.rm=TRUE, paired=FALSE)
wilcox.test(admindis, adminsat, data=final, na.rm=TRUE, paired=FALSE)
wilcox.test(admindis ~ adminsat, data=final, na.rm=TRUE, paired=FALSE, exact=TRUE)
m<-wilcox.test(admindis ~ adminsat, data=final, na.rm=TRUE, paired=FALSE, exact=TRUE)
print(m)
wilcox.test(adminsat ~ admindis, data=final, na.rm=TRUE, paired=FALSE, exact=TRUE)
wilcox.test(adminsat, admindis, data=final, na.rm=TRUE, paired=FALSE, exact=TRUE)
wilcox.test(adminsat, admindis, data=final, na.rm=TRUE, paired=FALSE, exact=FALSE)
admindis<-dissatisfied$To.what.extent.have.you.been.able.to.form.close.relationships.with.the.parents.at.your.current.school.
adminsat<-satisfied$To.what.extent.have.you.been.able.to.form.close.relationships.with.the.parents.at.your.current.school.
n <- max(length(admindis), length(adminsat))
length(admindis) <- n
length(adminsat) <- n
final<-cbind(admindis, adminsat)
wilcox.test(adminsat, admindis, data=final, na.rm=TRUE, paired=FALSE, exact=FALSE)
admindis<-dissatisfied$To.what.extent.have.you.been.able.to.form.close.relationships.with.the.students.at.your.current.school.
adminsat<-satisfied$To.what.extent.have.you.been.able.to.form.close.relationships.with.the.students.at.your.current.school.
n <- max(length(admindis), length(adminsat))
length(admindis) <- n
length(adminsat) <- n
final<-cbind(admindis, adminsat)
wilcox.test(adminsat, admindis, data=final, na.rm=TRUE, paired=FALSE, exact=FALSE)
admindis<-dissatisfied$To.what.extent.have.you.been.able.to.form.close.relationships.with.the.teachers.at.your.current.school.
adminsat<-satisfied$To.what.extent.have.you.been.able.to.form.close.relationships.with.the.teachers.at.your.current.school.
n <- max(length(admindis), length(adminsat))
length(admindis) <- n
length(adminsat) <- n
final<-cbind(admindis, adminsat)
wilcox.test(adminsat, admindis, data=final, na.rm=TRUE, paired=FALSE, exact=FALSE)
admindis<-dissatisfied$To.what.extent.is.policy.at.your.current.school.shaped.by.teacher.input.
adminsat<-satisfied$To.what.extent.is.policy.at.your.current.school.shaped.by.teacher.input.
n <- max(length(admindis), length(adminsat))
length(admindis) <- n
length(adminsat) <- n
final<-cbind(admindis, adminsat)
wilcox.test(adminsat, admindis, data=final, na.rm=TRUE, paired=FALSE, exact=FALSE)
#Code for statistical testing: Mann Whitney U
dis<-dissatisfied$To.what.extent.is.policy.at.your.current.school.shaped.by.teacher.input.
sat<-satisfied$To.what.extent.is.policy.at.your.current.school.shaped.by.teacher.input.
n <- max(length(admindis), length(adminsat))
length(dis) <- n
length(sat) <- n
final<-cbind(dis, sat)
wilcox.test(sat, dis, data=final, na.rm=TRUE, paired=FALSE, exact=FALSE)
library(ggplot2)
View(mpg2)
satdiscolumn<-numeric(length=length(teacherdata))
satdiscolumn<-numeric(nrow=nrow(teacherdata))
satdiscolumn<-numeric(nrow=nrow(teacherdata))
for (i in 2:nrow(teacherdata)) {
if (teacherdata$How.satisfied.are.you.with.your.current.teaching.position.[i]<4) {
satdiscolumn[i]<-"dissatisfied"
} else{
satdiscolumn[i]<-"satisfied"
}
}
satdiscolumn
teacherdata<-read.csv("Teacherdata1.csv", header = TRUE, stringsAsFactors = FALSE)
#What characterizes satisfied teachers?
satisfied=subset(x=teacherdata, teacherdata$How.satisfied.are.you.with.your.current.teaching.position. > 3)
#About their current experience
summary (satisfied$To.what.extent.have.you.been.able.to.form.close.relationships.with.the.administrators.at.your.current.school.)
satdiscolumn<-numeric(nrow=nrow(teacherdata))
for (i in 1:nrow(teacherdata)) {
if (teacherdata$How.satisfied.are.you.with.your.current.teaching.position.[i]<4) {
satdiscolumn[i]<-"dissatisfied"
} else{
satdiscolumn[i]<-"satisfied"
}
}
satdiscolumn
View(teacherdata)
satdiscolumn<-numeric()
for (i in 1:nrow(teacherdata)) {
if (teacherdata$How.satisfied.are.you.with.your.current.teaching.position.[i]<4) {
satdiscolumn[i]<-"dissatisfied"
} else{
satdiscolumn[i]<-"satisfied"
}
}
satdiscolumn
graph<-cbind(teacherdata, satdiscolumn)
View(graph)
ggplot(data=mpg2, aes(x= c(teacherdata$To.what.extent.have.you.been.able.to.form.close.relationships.with.the.administrators.at.your.current.school., teacherdata$To.what.extent.have.you.been.able.to.form.close.relationships.with.the.parents.at.your.current.school.)))+
stat_summary(fun.y=mean,
geom="bar")+
stat_summary(fun.data = mean_se,
geom = "errorbar",
width=.5)
ggplot(data=teacherdata, aes(x= c(teacherdata$To.what.extent.have.you.been.able.to.form.close.relationships.with.the.administrators.at.your.current.school., teacherdata$To.what.extent.have.you.been.able.to.form.close.relationships.with.the.parents.at.your.current.school.)))+
stat_summary(fun.y=mean,
geom="bar")+
stat_summary(fun.data = mean_se,
geom = "errorbar",
width=.5)
ggplot(data=teacherdata, aes(x= c(To.what.extent.have.you.been.able.to.form.close.relationships.with.the.administrators.at.your.current.school., To.what.extent.have.you.been.able.to.form.close.relationships.with.the.parents.at.your.current.school.)))+
stat_summary(fun.y=mean,
geom="bar")+
stat_summary(fun.data = mean_se,
geom = "errorbar",
width=.5)
ggplot(data=teacherdata, aes(x= c(To.what.extent.have.you.been.able.to.form.close.relationships.with.the.administrators.at.your.current.school., To.what.extent.have.you.been.able.to.form.close.relationships.with.the.parents.at.your.current.school.)))+
stat_summary(fun.y=mean,
geom="bar")
ggplot(data=teacherdata, aes(x= To.what.extent.have.you.been.able.to.form.close.relationships.with.the.administrators.at.your.current.school.))+
stat_summary(fun.y=mean,
geom="bar")+
stat_summary(fun.data = mean_se,
geom = "errorbar",
width=.5)
library(ggplot2)
ggplot(data=teacherdata, aes(x= To.what.extent.have.you.been.able.to.form.close.relationships.with.the.administrators.at.your.current.school.))+
stat_summary(fun.y=mean,
geom="bar")+
stat_summary(fun.data = mean_se,
geom = "errorbar",
width=.5)
ggplot(data=teacherdata, aes(x= To.what.extent.have.you.been.able.to.form.close.relationships.with.the.administrators.at.your.current.school., y=satdiscolumn))+
stat_summary(fun.y=mean,
geom="bar")+
stat_summary(fun.data = mean_se,
geom = "errorbar",
width=.5)
ggplot(data=teacherdata, aes(x= satdiscolumn, y= c(To.what.extent.have.you.been.able.to.form.close.relationships.with.the.administrators.at.your.current.school., To.what.extent.have.you.been.able.to.form.close.relationships.with.the.parents.at.your.current.school.)))+
stat_summary(fun.y=mean,
geom="bar")+
stat_summary(fun.data = mean_se,
geom = "errorbar",
width=.5)
ggplot(data=teacherdata, aes(x= satdiscolumn, y= c(To.what.extent.have.you.been.able.to.form.close.relationships.with.the.administrators.at.your.current.school., To.what.extent.have.you.been.able.to.form.close.relationships.with.the.parents.at.your.current.school.)))+
stat_summary(fun.y=mean,
geom="bar")+
stat_summary(fun.data = mean_se,
geom = "errorbar",
width=.5)
#About their current experience
summary (dissatisfied$To.what.extent.have.you.been.able.to.form.close.relationships.with.the.administrators.at.your.current.school.)
summary (dissatisfied$To.what.extent.have.you.been.able.to.form.close.relationships.with.the.parents.at.your.current.school.)
summary (dissatisfied$To.what.extent.have.you.been.able.to.form.close.relationships.with.the.students.at.your.current.school.)
summary (dissatisfied$To.what.extent.have.you.been.able.to.form.close.relationships.with.the.teachers.at.your.current.school.)
summary (dissatisfied$To.what.extent.is.policy.at.your.current.school.shaped.by.teacher.input.)
coeffvar<- function(dir, col=1, narm=TRUE, req=TRUE){
files<-list.files(path=dir)
files<-files[grepl(".csv", files, fixed = TRUE)]
results<-numeric(length(files))
#for loop, loop through files and calculate coeff of var
for (i in 1:length(files)){
read<-read.csv(files[i], header=TRUE, stringsAsFactors = FALSE)
#if else statement; users can override required obs warning by specifying req=FALSE
if(req==TRUE){
if(sum(! is.na(read[,col]))>=50){
results[i]<-sd(read[,col], na.rm=narm)/mean(read[,col], na.rm=narm)
}else {
print(paste(files[i],"has less than 50 observations."))
results[i]<-sd(read[,col], na.rm=narm)/mean(read[,col], na.rm=narm)
}
}else{
results[i]<-sd(read[,col], na.rm=narm)/mean(read[,col], na.rm=narm)
}
}
return(results)
}
#Example function use
coeffvar(dir="C:/Users/Lauren K/Desktop/Biocomptutorials/BioComp_Tutorial11/check", col=2, narm=TRUE, req=FALSE)
setwd("C:/Users/Lauren K/Desktop/Biocomptutorials/BioComp_Tutorial11/check")
coeffvar<- function(dir, col=1, narm=TRUE, req=TRUE){
files<-list.files(path=dir)
files<-files[grepl(".csv", files, fixed = TRUE)]
results<-numeric(length(files))
#for loop, loop through files and calculate coeff of var
for (i in 1:length(files)){
read<-read.csv(files[i], header=TRUE, stringsAsFactors = FALSE)
#if else statement; users can override required obs warning by specifying req=FALSE
if(req==TRUE){
if(sum(! is.na(read[,col]))>=50){
results[i]<-sd(read[,col], na.rm=narm)/mean(read[,col], na.rm=narm)
}else {
print(paste(files[i],"has less than 50 observations."))
results[i]<-sd(read[,col], na.rm=narm)/mean(read[,col], na.rm=narm)
}
}else{
results[i]<-sd(read[,col], na.rm=narm)/mean(read[,col], na.rm=narm)
}
}
return(results)
}
#Example function use
coeffvar(dir="C:/Users/Lauren K/Desktop/Biocomptutorials/BioComp_Tutorial11/check", col=2, narm=TRUE, req=FALSE)
setwd("C:/Users/Lauren K/Desktop/Biocomptutorials/BioComp_Tutorial12")
read.table("data.txt", header=TRUE, sep = ",", stringsAsFactors = FALSE)
data<-read.table("data.txt", header=TRUE, sep = ",", stringsAsFactors = FALSE)
unique(data$region)
library(ggplot2)
ggplot(data=data, aes(x= region, y=observations))+
stat_summary(fun.y=mean,
geom="bar")+
stat_summary(fun.data = mean_se,
geom = "errorbar",
width=0) +
theme_bw()
ggplot(data=data, aes(x= region, y=observations))+
stat_summary(fun.y=mean,
geom="bar")+
stat_summary(fun.data = mean_se,
geom = "errorbar",
width=1) +
theme_bw()
ggplot(data=data, aes(x= region, y=observations))+
stat_summary(fun.y=mean,
geom="bar")+
stat_summary(fun.data = mean_se,
geom = "errorbar",
width=.3) +
theme_bw()
ggplot(data = data, aes(x=region, y=observations))+
geom_point()+
theme_classic()
ggplot(data = data, aes(x=region, y=observations))+
geom_point()+
geom_jitter()+
theme_classic()
#Question 1
read.csv("Question1data.csv", hheader = TRUE, stringsAsFactors = FALSE)
#Question 1
teacher<-read.csv("Question1data.csv", hheader = TRUE, stringsAsFactors = FALSE)
#Question 1
teacher<-read.csv("Question1data.csv", header = TRUE, stringsAsFactors = FALSE)
colnames(teacher)
ggplot(data=teacher, aes(x=ï..For.how.many.school.years.have.you.taught.at.your.current.school., y=How.satisfied.are.you.with.your.current.teaching.position. ))+
geom_point()+
theme_classic()
setwd("C:/Users/Lauren K/Desktop/Biocomptutorials/BioComp_Tutorial11")
#####TUTORIAL
iris<-read.csv("iris.csv")
setwd("C:/Users/Lauren K/Desktop/Biocomptutorials/BioComp2020_Tutorial9")
#####TUTORIAL
iris<-read.csv("iris.csv", header = TRUE, stringsAsFactors = FALSE)
colnames(iris)
1:length(iris)
for(i in 1:4) {
plot<-ggplot(data=iris, aes(x=Species, y=iris[,i]))+
geom_violin()+
xlab("species")+
ylab(colnames(iris[,i]))
}
for(i in 1:4) {
plot<-ggplot(data=iris, aes(x=Species, y=iris[,i]))+
geom_violin()+
xlab("Species")+
ylab(colnames(iris[,i]))
}
View(plot)
for(i in 1:4) {
plot<-ggplot(data=iris, aes(x=Species, y=iris[,i]))+
geom_violin()+
xlab("Species")+
ylab(colnames(iris[,i]))
print(plot)
}
for(i in 1:4) {
plot<-ggplot(data=iris, aes(x=Species, y=iris[,i]))+
geom_violin()+
xlab("Species")+
ylab(colnames(iris)[i])
print(plot)
}
setwd("C:/Users/Lauren K/Desktop")
mpg<-read.csv("mpg.csv")
r<-.5
K<-100
N<-1:150
par(mfrow=c(1,2))
plot(N,r*N*(1-N/K),type='l',lwd=2,xlab="N",ylab="N(t+1)-N(t)")
abline(h=0,lty=3)
setwd("C:/Users/Lauren K/Desktop/Biocomptutorials/BioComp_Tutorial12")
#Question 1
teacher<-read.csv("Question1data.csv", header = TRUE, stringsAsFactors = FALSE)
#Question 1
birthweight<-read.csv("Question1data.csv", header = TRUE, stringsAsFactors = FALSE)
colnames(birthweight)
#Question 1
birthweight<-read.csv("Question1data.csv", header = TRUE, stringsAsFactors = FALSE)
ggplot(data=birthweight, aes(x=mnocig, y=Birthweight))+
geom_point()+
theme_classic()
ggplot(data=birthweight, aes(x=mnocig, y=Birthweight))+
geom_point()+
stat_smooth(method="lm")+
theme_classic()
ggplot(data=birthweight, aes(x=mnocig, y=Birthweight))+
geom_point()+
stat_smooth(method="lm")+
xlab("No. Cigarettes Smoked by Mother")+
ylab("Birthweight of Baby (lb)")
ggplot(data=birthweight, aes(x=mnocig, y=Birthweight))+
geom_point()+
stat_smooth(method="lm")+
xlab("No. Cigarettes Smoked by Mother")+
ylab("Birthweight of Baby (lb)")+
theme_classic()
